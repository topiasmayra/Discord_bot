Index: main.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import discord\r\nfrom discord.ext import commands\r\nfrom imdb import Cinemagoer\r\nimport os\r\nfrom dotenv import load_dotenv\r\nload_dotenv()\r\n\r\nDISCORD_TOKEN = os.getenv('DISCORD_TOKEN')\r\n\r\nintents = discord.Intents.all()\r\nintents.typing = False\r\nintents.presences = False\r\nprint()\r\n\r\nclient = discord.Client(intents=intents)\r\nclient = commands.Bot(command_prefix='!', intents=intents)\r\n\r\n\r\n@client.event\r\nasync def on_ready():\r\n    await client.change_presence(activity=discord.Activity(\r\n        type=discord.ActivityType.watching,\r\n        name='Hard Ticket to Hawaii'\r\n    ))\r\n    print('Bot is ready')\r\n\r\n# Funtions that moves movie titles to the correct channels\r\n@client.event\r\nasync def on_raw_reaction_add(payload):\r\n    if str(payload.emoji) == '<:Segal:1109089566926835753>':\r\n        channel_id = payload.channel_id\r\n        channel = client.get_channel(channel_id)\r\n        message = await channel.fetch_message(payload.message_id)\r\n\r\n        if message.author != client.user:\r\n            print(f'Content: {message.content}')\r\n            watchlist_channel_id = 1108863004289798164  # Channel name steve\r\n            watchlist_channel = client.get_channel(watchlist_channel_id)\r\n\r\n            if watchlist_channel is None:\r\n                return\r\n\r\n            await watchlist_channel.send(message.content)\r\n            await message.delete()\r\n    elif str(payload.emoji) == '<:Donna:1109096237476622336>':\r\n        channel_id = payload.channel_id\r\n        channel = client.get_channel(channel_id)\r\n        message = await channel.fetch_message(payload.message_id)\r\n\r\n        if message.author != client.user:\r\n            print(f'Content: {message.content}')\r\n            watchlist_channel_id = 1108805940498665603  # Channel name sidaris\r\n            watchlist_channel = client.get_channel(watchlist_channel_id)\r\n\r\n            if watchlist_channel is None:\r\n                return\r\n\r\n            await watchlist_channel.send(message.content)\r\n            await message.delete()\r\n    elif str(payload.emoji) == '<:check_mark:1109211912488620062>':\r\n        channel_id = payload.channel_id\r\n        channel = client.get_channel(channel_id)\r\n        message = await channel.fetch_message(payload.message_id)\r\n        watchlist_channel_id = 1108801625419677777  # Channel  watcheted\r\n        watchlist_channel = client.get_channel(watchlist_channel_id)\r\n        await watchlist_channel.send(message.content)\r\n        await message.delete()\r\n        if watchlist_channel is None:\r\n            return\r\n\r\n# Help command for the bot, that shows what emojies do what.\r\n\r\n\r\n\r\nclient.run(DISCORD_TOKEN)\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/main.py b/main.py
--- a/main.py	(revision 595b8a4f049deebf8710d60bdd2de9e496aba433)
+++ b/main.py	(date 1684851030948)
@@ -1,16 +1,17 @@
 import discord
 from discord.ext import commands
-from imdb import Cinemagoer
+import subprocess
 import os
 from dotenv import load_dotenv
+import IMDb_search
+
 load_dotenv()
-
 DISCORD_TOKEN = os.getenv('DISCORD_TOKEN')
-
+api_key = os.environ.get('TMDB_API_KEY')
 intents = discord.Intents.all()
 intents.typing = False
 intents.presences = False
-print()
+
 
 client = discord.Client(intents=intents)
 client = commands.Bot(command_prefix='!', intents=intents)
@@ -24,7 +25,7 @@
     ))
     print('Bot is ready')
 
-# Funtions that moves movie titles to the correct channels
+
 @client.event
 async def on_raw_reaction_add(payload):
     if str(payload.emoji) == '<:Segal:1109089566926835753>':
@@ -70,6 +71,20 @@
 
 # Help command for the bot, that shows what emojies do what.
 
+bot = commands.Bot(command_prefix='!', intents=intents)
+
+
+class MyNewHelp(commands.MinimalHelpCommand):
+    async def send_pages(self, mapping):
+        embed=discord.embed(title="Apuva")
+        for cog, commands in mapping.items():
+            command_signatures = [self.get_command_signature(c) for c in commands]
+            if command_signatures:
+                cog_name = getattr(cog, "qualified_name", "No Category")
+                embed.add_field(name=cog_name, value="\n".join(command_signatures), inline=False)
+
+        channel = self.get_destination()
+        await channel.send(embed=embed)
 
 
 client.run(DISCORD_TOKEN)
Index: IMDb_search.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/IMDb_search.py b/IMDb_search.py
new file mode 100644
--- /dev/null	(date 1684850782666)
+++ b/IMDb_search.py	(date 1684850782666)
@@ -0,0 +1,30 @@
+from imdb import Cinemagoer
+import pandas as pd
+import numpy as np
+
+ia = Cinemagoer()
+
+personname = input("Syötä ohjaajan tai näyttelijän nimi: ")
+director = ia.search_person(personname)
+movies1 = ia.get_person_filmography(director[0].personID)
+
+
+
+filmography = movies1.get('data', {}).get('filmography', {}).get('director', [])
+
+#checking if the filmography is movie or tv series
+kind = [movie['kind'] for movie in filmography ]
+
+# Extracting only the titles
+titles = [movie['title'] for movie in filmography ]
+
+# Creating a DataFrame from the titles
+df = pd.DataFrame({'Title': titles})
+
+
+
+# Removing duplicates
+df = df.drop_duplicates(subset=['Title'])
+
+print(df)
+
Index: .idea/other.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/other.xml b/.idea/other.xml
new file mode 100644
--- /dev/null	(date 1684839733651)
+++ b/.idea/other.xml	(date 1684839733651)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="PySciProjectComponent">
+    <option name="PY_SCI_VIEW_SUGGESTED" value="true" />
+  </component>
+</project>
\ No newline at end of file
